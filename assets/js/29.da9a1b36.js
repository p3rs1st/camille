(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{314:function(t,v,_){"use strict";_.r(v);var a=_(10),r=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"dubbo"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dubbo"}},[t._v("#")]),t._v(" Dubbo")]),t._v(" "),v("p",[t._v("RPC服务开发框架, 解决微服务架构下的服务治理与通信问题")]),t._v(" "),v("h2",{attrs:{id:"服务发现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[t._v("#")]),t._v(" 服务发现")]),t._v(" "),v("img",{attrs:{src:t.$withBase("/framework/dubbo/DubboArchitecture.png"),alt:"Dubbo框架"}}),t._v(" "),v("p",[v("strong",[t._v("与Dubbo2区别")]),t._v(":")]),t._v(" "),v("ul",[v("li",[t._v("Dubbo2接口级服务发现, 以接口粒度组织地址数据")]),t._v(" "),v("li",[t._v("Dubbo3应用级服务发现, 以应用粒度组织地址数据\n"),v("ul",[v("li",[t._v("优势: 适配云原生微服务变革, 提高性能与可伸缩性(降低Dubbo2中注册服务过多的问题)")])])])]),t._v(" "),v("h2",{attrs:{id:"rpc通信协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rpc通信协议"}},[t._v("#")]),t._v(" RPC通信协议")]),t._v(" "),v("h3",{attrs:{id:"http-1-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" HTTP/1.1")]),t._v(" "),v("ul",[v("li",[t._v("优势: 通用性, 大部分设备支持HTTP协议")]),t._v(" "),v("li",[t._v("劣势:\n"),v("ul",[v("li",[t._v("一个链路上只能有一个请求, 会产生HOL(队首阻塞)")]),t._v(" "),v("li",[t._v("头部传输协议性能差")])])])]),t._v(" "),v("h3",{attrs:{id:"grpc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#grpc"}},[t._v("#")]),t._v(" gRPC")]),t._v(" "),v("ul",[v("li",[t._v("基于HTTP2与Protobuf")]),t._v(" "),v("li",[t._v("RPC功能偏基础, 强绑定protobuf序列化方式")])]),t._v(" "),v("h3",{attrs:{id:"triple协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#triple协议"}},[t._v("#")]),t._v(" Triple协议")]),t._v(" "),v("ul",[v("li",[t._v("Dubbo3的主推协议, 由Dubbo1.0/Dubbo2.0演进而来")]),t._v(" "),v("li",[t._v("兼容gRPC以及增强和补充")])]),t._v(" "),v("h4",{attrs:{id:"特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),v("ul",[v("li",[t._v("支持跨语言互通")]),t._v(" "),v("li",[t._v("提供Request/Response模型以及Streaming和Bidirectional")]),t._v(" "),v("li",[t._v("易扩展, 穿透性高")]),t._v(" "),v("li",[t._v("支持多种序列化方式")])]),t._v(" "),v("h2",{attrs:{id:"流量控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#流量控制"}},[t._v("#")]),t._v(" 流量控制")]),t._v(" "),v("ul",[v("li",[t._v("根据制定好的路由规则分发到应用服务上")]),t._v(" "),v("li",[t._v("支持mesh方式流量管理, 实现A/B测试, 金丝雀发布, 蓝绿发布等")])]),t._v(" "),v("h2",{attrs:{id:"配置管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置管理"}},[t._v("#")]),t._v(" 配置管理")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("启动阶段配置项")]),t._v(": Dubbo启动时读取的配置")]),t._v(" "),v("li",[v("code",[t._v("配置方式")]),t._v(": API配置, XML配置, Annotation配置, 属性配置")]),t._v(" "),v("li",[v("code",[t._v("服务治理规则")]),t._v(": 改变运行时服务的行为和选址逻辑, 从而限流, 配置权重")])]),t._v(" "),v("h2",{attrs:{id:"部署架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#部署架构"}},[t._v("#")]),t._v(" 部署架构")]),t._v(" "),v("p",[t._v("三大中心化组件: 注册中心, 配置中心, 元数据中心")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("注册中心")]),t._v(": 服务注册和服务发现, 可作为配置中心和元数据中心")]),t._v(" "),v("li",[v("code",[t._v("元数据中心")]),t._v(": 兼容老版本Dubbo搭建的服务, 承载服务元数据, 接口方法级别配置信息的存储, 减轻注册中心压力")]),t._v(" "),v("li",[v("code",[t._v("配置中心")]),t._v(": 配置数据与服务治理规则")])])])}),[],!1,null,null,null);v.default=r.exports}}]);